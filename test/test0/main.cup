fn main() {
    ## ptr

    ## generics
    # fn some_func<T, U, V>(arg: T) {}
    # struct SomeStruct<T, U, V>
    # enum SomeEnum<T, U, V>

    ## revisit keywords

    ## break with value
    # let a = loop {
    #     break 2 + 2;
    # }

    ## string interpolation
    # "hello $a";

    ## match
    # match number {
    #     0..1 -> println!("One!"),
    #     2 -> println!("Two!"),
    # }

    for _ in items {    
    }

    let i = 0;
    while i < 10 {
        ++i;
    }

    a + 5
}

fn some_func(a: int, b: f32): ptr<int> {
    var a = 5;
    a += a;
    addr(a)
}

fn some_func(): ptr<int> {
    var a = 5;
    a += a;
    return addr(a);
}

## did you mean 'some command' ?

## try compile with tcc, gcc, clang, msvc
# error when no compiler found
# notify what compiler is used

## combo declarations
# let a, b = 0, c;

## elif or else without if
# elif 5 { }
# else { }

## restrict expr to certain scopes
# struct, enum, fn - only globals
# rest only in functions

## analyze globals first

## fn checks
# 1. fn not defined 
# 2. fn already defined
# 3. wrong number of args in fn call

## check for types
# 1. fn return type
# 2. operator types
# 3. fn call types